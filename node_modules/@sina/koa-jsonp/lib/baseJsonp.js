/**!
 * Copyright(c) koajs and other contributors.
 * MIT Licensed
 *
 * Authors:
 *   fengmk2 <fengmk2@gmail.com> (http://fengmk2.com)
 *
 * 注意：依赖了jsonp-body  我改了下 @wangkun5
 */

'use strict';

/**
 * Module dependencies.
 */

var jsonpBody = require('jsonp-body');

module.exports = jsonp;

function jsonp(app, options) {
    options = options || {};
    var callback = options.callback || 'callback';

    Object.defineProperty(app.context, 'jsonpSucc', {
        set: function(data) {
            let obj = _formatobj(0, data);
            var jsonpFunction = this.query[callback];
            if (!jsonpFunction) {
                _setNoCallbackHeader(this);
                return this.body = obj;
            }

            _setCallbackHeader(this);

            // 这个设置Content-Type的方法先关闭掉，不能识别浏览器
            // this.type = 'js';
            this.body = jsonpBody(obj, jsonpFunction, options);
        },

        configurable: true,
    });

    Object.defineProperty(app.context, 'jsonpError', {
        set: function(data) {
            let obj = _formatobj(11, data);
            var jsonpFunction = this.query[callback];
            if (!jsonpFunction) {
                _setNoCallbackHeader(this);
                return this.body = obj;
            }

            _setCallbackHeader(this);

            // 这个设置Content-Type的方法先关闭掉，不能识别浏览器
            // this.type = 'js';
            this.body = jsonpBody(obj, jsonpFunction, options);
        },

        configurable: true,
    });
}

/**
 * 格式化返回数据
 * @param  int   code 返回code
 * @param  array   data 返回数据
 * @return Obj
 *
 * @author wangkun5 <wangkun5@staff.sina.com.cn>
 * @date   2016-01-21
 */
function _formatobj(code, data) {
    let _msg = data[0];
    let _data = data[1];
    let _result = {
        result: {
            status: {
                code: code,
                msg: _msg,
            },
            data: _data,
        },
    };
    return _result;
}

/**
 * 没有callback时候的header
 * @param  {[type]}   obj [description]
 *
 * @author wangkun5 <wangkun5@staff.sina.com.cn>
 * @date   2016-01-21
 */
function _setNoCallbackHeader(obj) {
    // 这个header主要用来防止在IE9、chrome和safari中的MIME类型混淆攻击。firefox目前对此还存在争议
    // 设置这个可以禁用浏览器的类型猜测行为
    obj.set('X-Content-Type-Options', 'nosniff');
    if (obj.state.userAgent.isIE) {
        obj.set('Content-Type', 'text/plain; charset=UTF-8');
    }else {
        obj.set('Content-Type', 'application/json; charset=UTF-8');
    }
}

/**
 * 有callback时候的header
 * @param  {[type]}   obj [description]
 *
 * @author wangkun5 <wangkun5@staff.sina.com.cn>
 * @date   2016-01-21
 */
function _setCallbackHeader(obj) {
    // 这个header主要用来防止在IE9、chrome和safari中的MIME类型混淆攻击。firefox目前对此还存在争议
    // 设置这个可以禁用浏览器的类型猜测行为
    obj.set('X-Content-Type-Options', 'nosniff');
    if (obj.state.userAgent.isIE) {
        obj.set('Content-Type', 'text/javascript; charset=UTF-8');
    }else {
        obj.set('Content-Type', 'application/javascript; charset=UTF-8');
    }
}
